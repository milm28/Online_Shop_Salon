@model Online_Shop_Salon.Models.tbl_Account

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Admin_Leyout.cshtml";
}


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $("#FirstName").keyup(function () {
            $('#FirstName').css('textTransform', 'capitalize');
        });
        $("#LastName").keyup(function () {
            $('#LastName').css('textTransform', 'capitalize');
        });
        $("#Address").keyup(function () {
            $('#Address').css('textTransform', 'capitalize');
        });
        $("#City").keyup(function () {
            $('#City').css('textTransform', 'capitalize');
        });
    });
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Account_Id)
    <div class="container">
        <div class="row row h-100 align-items-center justify-content-centerr">
            <div class="col align-self-cente ">
                @if (TempData["Message_Edit_Error"] != null)
                {
                    <div class="container">
                        <div class="row justify-content-center">
                            <div class="alert">
                                <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                                <strong> @TempData["Message_Edit_Error"]</strong>
                            </div>
                        </div>
                    </div>
                }
                <div class="card">
                    <div class="card-header text-center display-4">
                        Edit Account
                        <a href="/Accounts/">
                            <button type="button" class="close" aria-label="Close" style="color:white;font-size:34px;top:9px;position:absolute;right:12px;">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </a>
                    </div>
                    <div class="card-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-row">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.Role_Id, "Dozvole", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("Role_Id", null, htmlAttributes: new { @class = "form-control", required = String.Empty }, optionLabel: "Izaberi Rolu")
                                @Html.ValidationMessageFor(model => model.Role_Id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label " })

                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4 ">
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "control-label" } })
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-row justify-content-center">
                            <div class="form-group col-md-6 ">
                                <div class="col-md-12">
                                    <button type="submit" class="btn btn-primary btn-lg btn-block">Snimi</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
